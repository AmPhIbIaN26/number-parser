from number_parser import parser
import pytest

LANG = 'ru'


class TestNumberParser():
    @pytest.mark.parametrize(
        "expected,test_input",
        [
            (0, "ноль"),
            (1, "один"),
            (2, "два"),
            (3, "три"),
            (4, "четыре"),
            (6, "шесть"),
            (30, "тридцать"),
            (40, "сорок"),
            (90, "девяносто"),
            (100, "сто"),
            (200, "двести"),
            (596, "пятьсот девяносто шесть"),
            (25, "двадцать пять"),
            (15, "пятнадцать"),
            (44, "сорок четыре"),
            (357, "триста пятьдесят семь"),
            (891, "восемьсот девяносто один"),
            (2000, "две тысячи"),
            (2020, "две тысячи двадцать"),
            (7004, "семь тысяч четыре"),
            (21000000, "двадцать один миллион"),
            (21000073, "двадцать один миллион семьдесят три"),
        ]
    )
    def test_parse_number_basic(self,  expected,  test_input):
        assert parser.parse_number(test_input, LANG) == expected

    @pytest.mark.parametrize(
        "expected,test_input",
        [
            (1, "одного"),
            (1, "одному"),
            (1, "одним"),
            (1, "одном"),
            (2, "двух"),
            (2, "двум"),
            (2, "двумя"),
            (3, "трех"),
            (3, "трем"),
            (3, "тремя"),
            (4, "четырех"),
            (4, "четырем"),
            (4, "четырьмя"),
            (6, "шести"),
            (6, "шестью"),
            (30, "тридцати"),
            (30, "тридцать"),
            (30, "тридцатью"),
            (40, "сорока"),
            (90, "девяноста"),
            (100, "ста"),
            (200, "двухсот"),
            (200, "двумстам"),
            (200, "двумястами"),
            (200, "двухстах"),
            (596, "пятисот девяноста шести"),
            (596, "пятистам девяноста шести"),
            (596, "пятьсот девяносто шесть"),
            (596, "пятьюстами девяноста шестью"),
            (596, "пятистах девяноста шести"),
            (500, "пятьюстами"),
            (1000, "тысяче"),
            (256, "двести пятьдесят шесть"),
            (256, "двухсот пятидесяти шести"),
            (256, "двумястами пятьюдесятью шестью"),
            (21000000, "двадцать одним миллионом"),
        ]
    )
    def test_parse_number_advanced(self, expected, test_input):
        assert parser.parse_number(test_input, LANG) == expected
